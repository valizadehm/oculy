name: Continuous Integration
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/ci.yaml
      - "oculy/**"
      - pyproject.toml

jobs:
  formatting:
    name: Check code formatting
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('lint_requirements.txt') }}
      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install -r lint_requirements.txt
      - name: Isort
        run: |
          isort src\oculy -c;
      - name: Black
        if: always()
        run: |
          black src\oculy --check;
      - name: Flake8
        if: always()
        run: |
          flake8 src\oculy;
  tests:
    name: Unit tests
    runs-on: ${{ matrix.os }}
    needs:
      - formatting
    if: needs.formatting.result == 'success'
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ["3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('test_requirements.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test_requirements.txt
      - name: Install project
        run: |
          pip install .
      - name: Test with pytest
        run: |
