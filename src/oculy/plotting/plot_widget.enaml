# --------------------------------------------------------------------------------------
# Copyright 2020 by Oculy Authors, see git history for more details.
#
# Distributed under the terms of the BSD license.
#
# The full license is in the file LICENCE, distributed with this software.
# --------------------------------------------------------------------------------------
"""
"""
from atom.api import Typed, set_default
from enaml.core.api import d_
from enaml.workbench.api import Workbench
from enaml.widgets.api import RawWidget, Container

from .plots import Figure


class FigureWidget(RawWidget):
    """Widget dedicated to displaying a figure.

    This widget is assumed to have a root object with access to the workbench.

    """

    __slots__ = ("__weakref__",)

    #: Reference to the figure displayed by the widget.
    figure = d_(Typed(Figure))

    hug_width = set_default("ignore")
    hug_height = set_default("ignore")

    resist_width = set_default("weak")
    resist_height = set_default("weak")

    def create_widget(self, parent):
        """Create the native widget linked to the figure."""
        if not self.figure.proxy:
            # Assume that the root window has a reference to the workbench
            plugin = self.root_object().workbench.get_plugin("oculy.plotting")
            self.figure.initialize(plugin.get_resolver(self.figure.backend_name))
        if not self.figure.proxy.is_active:
            self.figure.proxy.activate()
        return self.figure.proxy.get_native_widget(parent)
