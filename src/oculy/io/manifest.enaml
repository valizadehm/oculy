# --------------------------------------------------------------------------------------
# Copyright 2020 by Oculy Authors, see git history for more details.
#
# Distributed under the terms of the BSD license.
#
# The full license is in the file LICENCE, distributed with this software.
# --------------------------------------------------------------------------------------
"""Manifest for Oculy IO plugin.

"""
from typing import TYPE_CHECKING

from enaml.workbench.api import PluginManifest, Extension, ExtensionPoint
from enaml.workbench.core.api import Command

from gild.utils.plugin_tools import make_handler
from .loader import Loader

PLUGIN_ID = "oculy.io"

# =============================================================================
# --- Factories ---------------------------------------------------------------
# =============================================================================

if TYPE_CHECKING:
    from .plugin import IOPlugin

def io_plugin_factory() -> "IOPlugin":
    """ Factory funcion for the task manager plugin.

    """
    from .plugin import IOPlugin
    return IOPlugin()


# =============================================================================
# --- Descriptions ------------------------------------------------------------
# =============================================================================

LOADERS_DESC =\
"""

"""

enamldef IOManifest(PluginManifest):
    """Manifest for the plugin responsible for handling IO

    This plugin is in particular in charge of loading experimental data to be
    visualized.

    """
    id = PLUGIN_ID
    factory = io_plugin_factory

    # =========================================================================
    # --- Extension points ----------------------------------------------------
    # =========================================================================

    ExtensionPoint:
        id = "loaders"
        description = LOADERS_DESC

    # =========================================================================
    # --- Extensions ----------------------------------------------------------
    # =========================================================================

    Extension:
        id = "loaders"
        point = "oculy.io.loaders"
        Loader:
            id = "csv"
            file_extensions = [".csv"]
            get_cls => ():
                from .loaders.csv import CSVLoader
                return CSVLoader
            get_config_view => (loader):
                from .loaders.csv import CSVLoaderConfig
                return CSVLoaderConfig(loader=loader)

    Extension:
        id = "commands"
        point = "enaml.workbench.core.commands"
        Command:
            id = "oculy.io.list_matching_loaders"
            # FIXME add description
            handler = make_handler(PLUGIN_ID, "list_matching_loaders")
        Command:
            id = "oculy.io.create_loader"
            # FIXME add description
            handler = make_handler(PLUGIN_ID, "create_loader")
        Command:
            id = "oculy.io.create_loader_config"
            # FIXME add description
            handler = make_handler(PLUGIN_ID, "create_loader_config")
